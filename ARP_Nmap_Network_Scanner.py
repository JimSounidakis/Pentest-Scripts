from scapy.all import ARP, Ether, srp
import netifaces as ni
import nmap


# Get the IP address and network mask of the network interface
interface = "wlan0"
ni.ifaddresses(interface)
ip = ni.ifaddresses(interface)[ni.AF_INET][0]['addr']
print("Machine's IP Address: ", ip)
netmask = ni.ifaddresses(interface)[ni.AF_INET][0]['netmask']
print("Network Mask: ", netmask)

# Calculate the network address
ip_parts = ip.split('.')
netmask_parts = netmask.split('.')
network = '.'.join(str(int(ip_parts[i]) & int(netmask_parts[i])) for i in range(4))
print("Network: ", network + "/24\t" + "CIDR Format\n\n")

# Create an ARP request packet
arp = ARP(pdst = network + '/24')
print(arp)
ether = Ether(dst = "ff:ff:ff:ff:ff:ff")
packet = ether / arp

# Send the packet and capture the response
result = srp(packet, timeout=3, iface=interface, verbose=0)[0]
print("Result: ", result)
print("\n\n")

# Process the response
clients = []
for sent, received in result:
	clients.append({'ip': received.psrc, 'mac': received.hwsrc})

print("------------ Alive Hosts ------------")
# Print the IP-MAC pairs
for client in clients:
	print(f"IP Address: {client['ip']}, MAC Address: {client['mac']}")

print("\n\n")


# Create an Nmap scanner object
scanner = nmap.PortScanner()
print("......Creating the Scanner......")
print("......Please Wait......")

test_output = []
# Perform the Nmap scan
print("......Performing the Scan......")
print("......This might take some time......\n\n")
for client in clients:
	test_output.append(scanner.scan(client['ip'], arguments="-sS -Pn -sV -sC"))

# Generate the scan Report
print("!!!! All Done !!!!")
print("......Generating the Report......\n\n")
report = "Nmap Scan Report:\n\n"
for host in scanner.all_hosts():
	if scanner[host].state() == 'up':
		report += f"Host: {host}\n"
		for proto in scanner[host].all_protocols():
			report += f"Protocol: {proto}\n"
			ports = scanner[host][proto].keys()
			for port in ports:
				service = scanner[host][proto][port]
				report += f"Port: {port}\tState: {service['state']}\tService: {service['name']}\tVersion: {service['version']}\n"

print(report)
